CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           OLD_TITLE VARCHAR(30),
                           NEW_TITLE VARCHAR(30),
                           OLD_PUBYEAR INT(11),
                           NEW_PUBYEAR INT(11),
                           OLD_BESTSELLER boolean,
                           NEW_BESTSELLER boolean,
                           PRIMARY KEY (EVENT_ID)
);
DROP TRIGGER BOOKS_INSERT;

DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,
                           NEW_BESTSELLER)
        VALUE(CURTIME(), 'INSERT',NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);                                                            -- [5]
END $$

DELIMITER ;

INSERT INTO BOOKS (BOOK_ID, TITLE, PUBYEAR, BESTSELLER)
VALUES (6, 'Ghost', 2011, true);

COMMIT;

DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

DELIMITER ;


DELETE FROM BOOKS WHERE BOOK_ID = 6;

COMMIT;

DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,
                           NEW_BESTSELLER, OLD_TITLE, OLD_PUBYEAR,
                           OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR,
              NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR,
              OLD.BESTSELLER);
END $$

DELIMITER ;

UPDATE BOOKS SET TITLE = 'Trial 2'
WHERE BOOK_ID = 3;

COMMIT;

CREATE TABLE READERS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           READER_ID INT(11) NOT NULL,
                           OLD_FIRSTNAME VARCHAR(20),
                           NEW_FIRSTNAME VARCHAR(20),
                           OLD_LASTNAME VARCHAR(20),
                           NEW_LASTNAME VARCHAR(20),
                           OLD_PESELID VARCHAR(11),
                           NEW_PESELID VARCHAR(11),
                           OLD_VIP_LEVEL VARCHAR(20),
                           NEW_VIP_LEVEL VARCHAR(20),
                           PRIMARY KEY (EVENT_ID)
);

DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
                           NEW_PESELID, NEW_VIP_LEVEL)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
              NEW.PESELID, NEW.VIP_LEVEL);                                                            -- [5]
END $$

DELIMITER ;

INSERT INTO READERS (READER_ID, FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES (6, 'Filip', 'Smith', '9706060549', 'Gold Customer');

COMMIT;

DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$

DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 6;

COMMIT;

DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
                             NEW_PESELID, NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME,
                             OLD_PESELID, OLD_VIP_LEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
              NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME,
              OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;

UPDATE READERS SET VIP_LEVEL = 'Standard Customer'
WHERE READER_ID = 5;

COMMIT;